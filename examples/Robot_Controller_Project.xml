<xml xmlns="https://developers.google.com/blockly/xml"><variables><variable id="+?pQ2%VIB:jAk)dpaLIg">distanceVar</variable><variable id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</variable></variables><block type="decorative_text" id=".cY-W!dj7N_.CgKS#hAt" x="15" y="-75"><field name="TEXT">ROBOT CONTOLLER</field></block><block type="remarks" id="@T*0#-OmSKCfa1n_Vr13" x="355" y="-85"><field name="TEXT">Start of Robot Logic</field><next><block type="numeric_variable" id="GJ?%{Q$ky|x|q+bTO|^0"><field name="VAR_NAME">distanceVar</field><field name="VAR_TYPE">Long</field><field name="INITIAL_VALUE">0</field><next><block type="numeric_variable" id="^3e5=Hg_u1W0[C[VO6lJ"><field name="VAR_NAME">pulseWidthVar</field><field name="VAR_TYPE">Long</field><field name="INITIAL_VALUE">0</field><next><block type="do_loop_simplest" id="s1a7!mW5pOQ9s%nlQ.Jf"><statement name="DO_CODE"><block type="remarks" id="O:*jlh/BuavXi7#7}yn`"><field name="TEXT">Measure Distance</field><next><block type="call_subroutine" id="6JQyXQ=4)b9($~MAuL^6"><field name="SUB_NAME">MeasureDistance</field><next><block type="remarks" id="K/4_!~dd04.ham9^!u|9"><field name="TEXT"> 'Decision based on distance</field><next><block type="controls_if_else" id="k2vFwqS3KLi}jm74c]rM"><value name="CONDITION"><block type="logic_compare" id="D4:Q^I+T~0X[I}Wp|1mD"><field name="OP">&gt;</field><value name="A"><block type="get_variable" id="a!Cd+}vUuZAT5+pXXsET"><field name="VAR_NAME" id="+?pQ2%VIB:jAk)dpaLIg">distanceVar</field></block></value><value name="B"><block type="get_numeric_constant" id="W2vt^yMX6KZ.uGDrY5JY"><field name="CONSTANT_NAME">SAFE_DISTANCE</field></block></value></block></value><statement name="DO"><block type="call_subroutine" id="c[dFAc?}BmC;:XajIh|_"><field name="SUB_NAME">MoveForward</field></block></statement><statement name="ELSE"><block type="call_subroutine" id="=R`$M[DK4,OIYhO{=+Il"><field name="SUB_NAME">StopRobot</field><next><block type="remarks" id="u]o+7E7W?~$Z;Uc!OMLY"><field name="TEXT">Optional: Reverse or turn</field><next><block type="call_subroutine" id="%IxY|3KYsnKmxWRi/fD0"><field name="SUB_NAME">ReverseRobot</field><next><block type="wait_fixed" id="4lho:{4gF[3SbH:jw-rB"><field name="VALUE">500</field><field name="UNIT">ms</field><next><block type="call_subroutine" id="EywmG_9$:|s%YnfCaiG^"><field name="SUB_NAME">StopRobot</field></block></next></block></next></block></next></block></next></block></statement><next><block type="remarks" id="nW}=@_weQo(G2[Iq*gC`"><field name="TEXT">Delay between measurements</field><next><block type="wait_fixed" id="q3hNiQ7WIu6{xCQd~pz|"><field name="VALUE">100</field><field name="UNIT">ms</field></block></next></block></next></block></next></block></next></block></next></block></statement></block></next></block></next></block></next></block><block type="decorative_text" id="fW[;6W8:NIk5=4/eNg;d" collapsed="true" x="15" y="-35"><field name="TEXT">Explanation of the Program:&amp;#10;&amp;#10;Chip and Clock: The program targets a PIC16F877A with a 20 MHz clock. Adjust the #chip directive for your microcontroller.&amp;#10;&amp;#10;Pin Definitions: &amp;#10;&amp;#10;Defines pins for the HC-SR04 (TRIG, ECHO) and motor control (MOTOR_A_FWD, MOTOR_A_REV, MOTOR_B_FWD, MOTOR_B_REV).&amp;#10;Constants:&amp;#10;SAFE_DISTANCE: 20 cm threshold for stopping.&amp;#10;SPEED_OF_SOUND: 34300 cm/s for distance calculation.&amp;#10;TIMEOUT: 20000 us to prevent infinite loops if the sensor fails.&amp;#10;&amp;#10;Distance Measurement:&amp;#10;&amp;#10;Sends a 10us pulse to the TRIG pin.&amp;#10;Measures the ECHO pulse width in microseconds.&amp;#10;Converts pulse width to distance using Distance = PulseWidth / 58 (derived from speed of sound, accounting for round-trip).&amp;#10;&amp;#10;Robot Control:&amp;#10;&amp;#10;MoveForward: Sets both motors to move forward.&amp;#10;StopRobot: Stops both motors.&amp;#10;ReverseRobot: Reverses both motors for 500 ms when an obstacle is too close.&amp;#10;Main Loop: Continuously measures distance and controls the robot based on the SAFE_DISTANCE threshold.&amp;#10;&amp;#10;Notes:&amp;#10;&amp;#10;Hardware Setup: Ensure the HC-SR04 is powered at 5V, and use a level shifter if your microcontroller operates at 3.3V. The H-bridge should be properly connected to handle motor currents.&amp;#10;Calibration: The distance calculation (PulseWidth / 58) assumes a typical environment. You may need to adjust for temperature or other factors affecting the speed of sound.&amp;#10;Enhancements: You can modify the program to include turning (e.g., activate one motor forward and the other reverse) instead of reversing. Add PWM for speed control if supported by your H-bridge.&amp;#10;Timeout Handling: If the sensor fails (e.g., no echo), the program sets Distance = 999 to indicate an error, which triggers the stop/reverse behavior.&amp;#10;Usage:&amp;#10;Compile the program using the GCBASIC IDE.&amp;#10;Upload it to your microcontroller using a programmer (e.g., PICkit).&amp;#10;Connect the HC-SR04 and motors as specified.&amp;#10;Power on the robot and test its behavior with obstacles.</field></block><block type="select_chip" id="T4LT/re+:#C@prbI;%]G" x="795" y="-25"><field name="FILTER"></field><field name="CHIP">16F877A</field></block><block type="constant_block_group" id="$T?:q*P4}*5?HD9F(-e!" collapsed="true" x="965" y="35"><field name="NAME">Setup</field><statement name="INNER_BLOCKS"><block type="define_constant" id="(r{iG3jt/S{vA=8^Bc_~"><field name="NAME">TRIG</field><field name="VALUE">PORTB.0</field><next><block type="define_constant" id="k;^r#z?4P/etrH-|G(VE"><field name="NAME">ECHO</field><field name="VALUE">PORTB.1</field><next><block type="define_constant" id="`iJhZAJ]RhLQuKk8#j-x"><field name="NAME">MOTOR_A_FWD</field><field name="VALUE">PORTC.0</field><next><block type="define_constant" id="R^4-;f*sXlM`4f|Sb1gY"><field name="NAME">MOTOR_A_REV</field><field name="VALUE">PORTC.1</field><next><block type="define_constant" id="t(Ywqw3WxiS?^_7V8F#{"><field name="NAME">MOTOR_B_REV</field><field name="VALUE">PORTC.3</field><next><block type="define_constant" id="vah(R_O18=.`O!6~5F+z"><field name="NAME">MOTOR_B_FWD</field><field name="VALUE">PORTC.2</field><next><block type="define_constant" id="2M4hCc.E5TD.f^i=a}%K"><field name="NAME">TIMEOUT</field><field name="VALUE">20000</field><next><block type="define_constant" id="6;PEA_qu;z7Au#y|sz:;"><field name="NAME">SPEED_OF_SOUND</field><field name="VALUE">34300</field><next><block type="define_constant" id="~PTmK7R*VNI6RmwT]*_R"><field name="NAME">SAFE_DISTANCE</field><field name="VALUE">500</field></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="user_subroutine" id="oLf4b^AW07ORl;z_1HpW" collapsed="true" x="975" y="105"><field name="SUB_NAME">MeasureDistance</field><statement name="BODY"><block type="remarks" id="g@kjg`P$3Vz73gJ@8*B`"><field name="TEXT">Clear trigger</field><next><block type="set_constant_state" id="AYWG+qNvGw?qqwHiE#EL"><field name="CONSTANT_NAME">TRIG</field><field name="STATE">0</field><next><block type="wait_fixed" id="JSR?%n`*$DVrw(@]l6Qt"><field name="VALUE">2</field><field name="UNIT">us</field><next><block type="remarks" id="-FQI4%qgLM,~FarBh2P2"><field name="TEXT">Send 10us trigger pulse</field><next><block type="set_constant_state" id="AN3~.I3Q+rdzozr_b1_$"><field name="CONSTANT_NAME">TRIG</field><field name="STATE">1</field><next><block type="wait_fixed" id=".x3~*%NZlftWqK*]TYll"><field name="VALUE">10</field><field name="UNIT">us</field><next><block type="set_constant_state" id="s]*$iP$INod[tR,8Y:OB"><field name="CONSTANT_NAME">TRIG</field><field name="STATE">0</field><next><block type="remarks" id="6=Gw}3tbG=(`:c1{|Ujz"><field name="TEXT">Measure echo pulse width</field><next><block type="set_variable" id="R3FHRw@FOVP(R(D0N+UR"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field><value name="VALUE"><block type="math_number" id="Ks=vib3}r/~$RybxvjpT"><field name="NUMBER">0</field></block></value><next><block type="do_loop_simple" id="h,Px^=+}y^:Stjcqdb)`"><field name="DO_TYPE">WHILE</field><field name="LOOP_TYPE">NONE</field><value name="DO_CONDITION"><block type="logic_operation" id="@!I~*}hHVwitYCIu[J]Y"><field name="OP">&amp;</field><value name="A"><block type="logic_compare" id="$ZgJpStI^*.``,Em$t1z"><field name="OP">=</field><value name="A"><block type="get_port_constant" id="UAo6Id3/)v||X$6zI1ha"><field name="CONSTANT_NAME">ECHO</field></block></value><value name="B"><block type="math_number" id="v(FZEYT#(28I1U4,}=7^"><field name="NUMBER">0</field></block></value></block></value><value name="B"><block type="logic_compare" id="Qgc7z}3/ec*sWvh`5`QW"><field name="OP">&lt;</field><value name="A"><block type="get_variable" id="t`+-4tlDE*;$*%2Ny*hJ"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field></block></value><value name="B"><block type="get_numeric_constant" id="e~qy5@OxF[}sm6cJ*ij+"><field name="CONSTANT_NAME">TIMEOUT</field></block></value></block></value></block></value><statement name="DO_CODE"><block type="set_variable" id="n;=u5qz?p]+8b][s_ohW"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field><value name="VALUE"><block type="math_operation" id="dKjFh`ja1mdtiu$v68ua"><field name="OPERATOR">+</field><value name="A"><block type="get_variable" id="Glxt0dG3rq;_~G}Qf0c/"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field></block></value><value name="B"><block type="math_number" id="eG_r_8}f$xvj4kknre[E"><field name="NUMBER">1</field></block></value></block></value></block></statement><next><block type="set_variable" id="n/bKJNJm?-V;F@r0SCH9"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field><value name="VALUE"><block type="math_number" id="?T[.?diZ#t]AI@EOGsIU"><field name="NUMBER">0</field></block></value><next><block type="do_loop_simple" id="]@7Bur8fUJHY$*n4$C[-" collapsed="true"><field name="DO_TYPE">WHILE</field><field name="LOOP_TYPE">NONE</field><value name="DO_CONDITION"><block type="logic_operation" id="C?UB0Fr3_v}OC$TtPKDA"><field name="OP">&amp;</field><value name="A"><block type="logic_compare" id="+s-#9%Ua]]S0pE*ZBcBP"><field name="OP">=</field><value name="A"><block type="get_port_constant" id="Y:p{emEj)c;A0jIbhHX]"><field name="CONSTANT_NAME">ECHO</field></block></value><value name="B"><block type="math_number" id="W_H:,z;N52n:4Y2%mrKJ"><field name="NUMBER">1</field></block></value></block></value><value name="B"><block type="logic_compare" id="SJ3EfEqpob9kFv;yU1nv"><field name="OP">&lt;</field><value name="A"><block type="get_variable" id="`VgWndVt4bs4`dekPyVM"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field></block></value><value name="B"><block type="get_numeric_constant" id="%::WKyg0jZt00eK.;f;p"><field name="CONSTANT_NAME">TIMEOUT</field></block></value></block></value></block></value><statement name="DO_CODE"><block type="set_variable" id="GgsL%S(9E%qy]~6z)hS,"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field><value name="VALUE"><block type="math_operation" id="@bURxUEmzXKbstZayB,!"><field name="OPERATOR">+</field><value name="A"><block type="get_variable" id="#W^sIU1L?=qdpw$i+_+D"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field></block></value><value name="B"><block type="math_number" id="$ghQ0]iZ3*e=/72^8t$A"><field name="NUMBER">1</field></block></value></block></value></block></statement><next><block type="remarks" id="h1%tNzw8NB6n8DD:iMv/"><field name="TEXT">Calculate distance (PulseWidth in us, convert to cm)</field><next><block type="remarks" id="{TU33z0Cw$!wFYcDqVj+"><field name="TEXT">Distance = (PulseWidth * SPEED_OF_SOUND) / (2 * 1000000)</field><next><block type="set_variable" id="eqG#/}V{R*5Ew1Zf[f]T"><field name="VAR_NAME" id="+?pQ2%VIB:jAk)dpaLIg">distanceVar</field><value name="VALUE"><block type="math_operation" id="[k}pZqFwOIY-D8psXD0q"><field name="OPERATOR">/</field><value name="A"><block type="get_variable" id="WBv1uoHW8Nc#u`0tpQm4"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field></block></value><value name="B"><block type="math_number" id="~A+PnR{U+z~BH~*H]~HD"><field name="NUMBER">48</field></block></value></block></value><next><block type="controls_if" id="~8;{^VnYj=:EQzV{niTu" collapsed="true"><value name="CONDITION"><block type="logic_compare" id="dnmHMHh.HFqZFa9sHd/}"><field name="OP">&gt;=</field><value name="A"><block type="get_variable" id="Uv$?Q%0Rr7GZj7puCb*4"><field name="VAR_NAME" id="Gv[]sN)U,eZR|Qn6*sD2">pulseWidthVar</field></block></value><value name="B"><block type="get_numeric_constant" id="/jVkH)Uk]u*{k1kW6Aqj"><field name="CONSTANT_NAME">TIMEOUT</field></block></value></block></value><statement name="DO"><block type="remarks" id="8ip9Qka(fZeZd3f*mv+e"><field name="TEXT">Indicate error or out of range</field><next><block type="set_variable" id="A4xuq#@pIOlNKP.Z#/a8"><field name="VAR_NAME" id="+?pQ2%VIB:jAk)dpaLIg">distanceVar</field><value name="VALUE"><block type="math_number" id="u)w2aAHmuja0DG0g!mB8"><field name="NUMBER">999</field></block></value></block></next></block></statement></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></next></block></statement></block><block type="user_subroutine" id=")7H3m=:S5$Wesqg-UKY:" collapsed="true" x="975" y="175"><field name="SUB_NAME">MoveForward</field><statement name="BODY"><block type="code_container" id="4s^(J*#y)R^7v`m1Fj.Z"><field name="COMMENT">Motor control</field><statement name="STACK"><block type="set_constant_state" id="(h4WDEa_$YW5qh#$8Dx9"><field name="CONSTANT_NAME">MOTOR_A_FWD</field><field name="STATE">1</field><next><block type="set_constant_state" id="/Ap-lz}[k;fv%+6KW;-`"><field name="CONSTANT_NAME">MOTOR_A_REV</field><field name="STATE">0</field><next><block type="set_constant_state" id="rG?ZtQC2zf#d2DBFY5e?"><field name="CONSTANT_NAME">MOTOR_B_FWD</field><field name="STATE">1</field><next><block type="set_constant_state" id="io!UFyfns^m:A/59I1fK"><field name="CONSTANT_NAME">MOTOR_B_REV</field><field name="STATE">0</field></block></next></block></next></block></next></block></statement></block></statement></block><block type="user_subroutine" id="h!Qx62!E|z$A^`EByMW2" collapsed="true" x="975" y="235"><field name="SUB_NAME">ReverseRobot</field><statement name="BODY"><block type="code_container" id="W0P*^;,/6m3YVDN[)5+7" collapsed="true"><field name="COMMENT">Motor control</field><statement name="STACK"><block type="set_constant_state" id="?UgOwS!Udk0@|Po]Ct*v"><field name="CONSTANT_NAME">MOTOR_A_FWD</field><field name="STATE">0</field><next><block type="set_constant_state" id="~U1pYbUGDPixIS(X[f~z"><field name="CONSTANT_NAME">MOTOR_A_REV</field><field name="STATE">1</field><next><block type="set_constant_state" id="a8x:x/8_OPx}W+}5/vxS"><field name="CONSTANT_NAME">MOTOR_B_FWD</field><field name="STATE">0</field><next><block type="set_constant_state" id="9[?(,q0!3hdQtY|Bvf;G"><field name="CONSTANT_NAME">MOTOR_B_REV</field><field name="STATE">1</field></block></next></block></next></block></next></block></statement></block></statement></block><block type="user_subroutine" id="P:f[o?OUhFN,fYwk)*j8" collapsed="true" x="985" y="305"><field name="SUB_NAME">StopRobot</field><statement name="BODY"><block type="code_container" id="61.p$q)h/~N[1kr_%1k#"><field name="COMMENT">Motor control</field><statement name="STACK"><block type="set_constant_state" id="7^9q`$k$T8X=L;TIN0Wl"><field name="CONSTANT_NAME">MOTOR_A_FWD</field><field name="STATE">0</field><next><block type="set_constant_state" id="^:qO+E=uYWNK|1+bs4f$"><field name="CONSTANT_NAME">MOTOR_A_REV</field><field name="STATE">0</field><next><block type="set_constant_state" id="{WcQ+NM+8lwfD+KGVwl:"><field name="CONSTANT_NAME">MOTOR_B_FWD</field><field name="STATE">0</field><next><block type="set_constant_state" id="%4xj5K*ka[HL~Vcg]37F"><field name="CONSTANT_NAME">MOTOR_B_REV</field><field name="STATE">0</field></block></next></block></next></block></next></block></statement></block></statement></block></xml>